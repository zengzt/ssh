<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tao.dao.TbCommodityPurchaseMapper" >
  <resultMap id="BaseResultMap" type="com.tao.TbCommodityPurchase" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="userid" property="userid" jdbcType="INTEGER" />
    <result column="commodityid" property="commodityid" jdbcType="INTEGER" />
    <result column="payment_status" property="paymentStatus" jdbcType="CHAR" />
    <result column="payment_method" property="paymentMethod" jdbcType="CHAR" />
    <result column="payment_situation" property="paymentSituation" jdbcType="CHAR" />
    <result column="createdtime" property="createdtime" jdbcType="DATE" />
    <result column="updatedtime" property="updatedtime" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, userid, commodityid, payment_status, payment_method, payment_situation, createdtime, 
    updatedtime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tao.TbCommodityPurchaseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_commodity_purchase
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_commodity_purchase
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_commodity_purchase
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tao.TbCommodityPurchaseExample" >
    delete from tb_commodity_purchase
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tao.TbCommodityPurchase" >
    insert into tb_commodity_purchase (id, userid, commodityid, 
      payment_status, payment_method, payment_situation, 
      createdtime, updatedtime)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{commodityid,jdbcType=INTEGER}, 
      #{paymentStatus,jdbcType=CHAR}, #{paymentMethod,jdbcType=CHAR}, #{paymentSituation,jdbcType=CHAR}, 
      #{createdtime,jdbcType=DATE}, #{updatedtime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.tao.TbCommodityPurchase" >
    insert into tb_commodity_purchase
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="commodityid != null" >
        commodityid,
      </if>
      <if test="paymentStatus != null" >
        payment_status,
      </if>
      <if test="paymentMethod != null" >
        payment_method,
      </if>
      <if test="paymentSituation != null" >
        payment_situation,
      </if>
      <if test="createdtime != null" >
        createdtime,
      </if>
      <if test="updatedtime != null" >
        updatedtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="commodityid != null" >
        #{commodityid,jdbcType=INTEGER},
      </if>
      <if test="paymentStatus != null" >
        #{paymentStatus,jdbcType=CHAR},
      </if>
      <if test="paymentMethod != null" >
        #{paymentMethod,jdbcType=CHAR},
      </if>
      <if test="paymentSituation != null" >
        #{paymentSituation,jdbcType=CHAR},
      </if>
      <if test="createdtime != null" >
        #{createdtime,jdbcType=DATE},
      </if>
      <if test="updatedtime != null" >
        #{updatedtime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tao.TbCommodityPurchaseExample" resultType="java.lang.Integer" >
    select count(*) from tb_commodity_purchase
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_commodity_purchase
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.commodityid != null" >
        commodityid = #{record.commodityid,jdbcType=INTEGER},
      </if>
      <if test="record.paymentStatus != null" >
        payment_status = #{record.paymentStatus,jdbcType=CHAR},
      </if>
      <if test="record.paymentMethod != null" >
        payment_method = #{record.paymentMethod,jdbcType=CHAR},
      </if>
      <if test="record.paymentSituation != null" >
        payment_situation = #{record.paymentSituation,jdbcType=CHAR},
      </if>
      <if test="record.createdtime != null" >
        createdtime = #{record.createdtime,jdbcType=DATE},
      </if>
      <if test="record.updatedtime != null" >
        updatedtime = #{record.updatedtime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_commodity_purchase
    set id = #{record.id,jdbcType=INTEGER},
      userid = #{record.userid,jdbcType=INTEGER},
      commodityid = #{record.commodityid,jdbcType=INTEGER},
      payment_status = #{record.paymentStatus,jdbcType=CHAR},
      payment_method = #{record.paymentMethod,jdbcType=CHAR},
      payment_situation = #{record.paymentSituation,jdbcType=CHAR},
      createdtime = #{record.createdtime,jdbcType=DATE},
      updatedtime = #{record.updatedtime,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tao.TbCommodityPurchase" >
    update tb_commodity_purchase
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="commodityid != null" >
        commodityid = #{commodityid,jdbcType=INTEGER},
      </if>
      <if test="paymentStatus != null" >
        payment_status = #{paymentStatus,jdbcType=CHAR},
      </if>
      <if test="paymentMethod != null" >
        payment_method = #{paymentMethod,jdbcType=CHAR},
      </if>
      <if test="paymentSituation != null" >
        payment_situation = #{paymentSituation,jdbcType=CHAR},
      </if>
      <if test="createdtime != null" >
        createdtime = #{createdtime,jdbcType=DATE},
      </if>
      <if test="updatedtime != null" >
        updatedtime = #{updatedtime,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tao.TbCommodityPurchase" >
    update tb_commodity_purchase
    set userid = #{userid,jdbcType=INTEGER},
      commodityid = #{commodityid,jdbcType=INTEGER},
      payment_status = #{paymentStatus,jdbcType=CHAR},
      payment_method = #{paymentMethod,jdbcType=CHAR},
      payment_situation = #{paymentSituation,jdbcType=CHAR},
      createdtime = #{createdtime,jdbcType=DATE},
      updatedtime = #{updatedtime,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>